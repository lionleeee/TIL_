(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{331:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"상속"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#상속"}},[s._v("#")]),s._v(" 상속")]),s._v(" "),t("p",[s._v("상속은 쉽게 is a관계가 성립될 때 사용할 수 있음\n"),t("br"),s._v("\nis a 관계란?")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("OOO은 XXX이다\n")])])]),t("p",[s._v("가 성립 되는 관계를 말한다.")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" string Name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" Id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v('위와 같이 "사원은 사람이다"라는 관계를 말한다')]),s._v(" "),t("p",[s._v("ia a관계가 성립되지 않을 때는 잘못된 설계이므로 한번 더 확인 해보길 바란다.")]),s._v(" "),t("p",[s._v("사원은 사람이므로 사람취급하는 것이라고 생각하면 편하다.\n반대로, 사람은 사원이 아닐 수도 있으므로(고객 일 수도 있음) 사원으로 취급 할 수 없다.")]),s._v(" "),t("p",[s._v("C#에서 모든 형을 상속해준 클래스를 거슬러 올라가면 최정적을 Object 클래스를 만나게 된다. 다시말해 클래스 계층의 정점에 있는 것은 Object 클래스.")]),s._v(" "),t("p",[s._v("클래스를 정의 할 때 상속할 클래스를 지정하지 않으면 상속되는 부모 클래스는 Object 클래스가 된다.")]),s._v(" "),t("p",[s._v("예를 들어 아래 두개의 클래스 선언은 같다.")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Persson")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Persson")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("object")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("이렇게 '모든 클래스는 object다'라고 할 수 있으므로 다음과 같이 대입이 가능하다")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("object person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("이렇게 하면 여러 가지 형의 객체를 저장하는 배열이나 여러 가지 형의 객체를 받는 메서드를 정의 할 수 있다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);