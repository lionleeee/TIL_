(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{343:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"일일코딩-완전탐색-최소-직사각형"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#일일코딩-완전탐색-최소-직사각형"}},[t._v("#")]),t._v(" [일일코딩][완전탐색] 최소 직사각형")]),t._v(" "),s("p",[t._v("https://school.programmers.co.kr/learn/courses/30/lessons/86491")]),t._v(" "),s("h4",{attrs:{id:"문제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문제"}},[t._v("#")]),t._v(" 문제")]),t._v(" "),s("p",[t._v("명함 지갑을 만드는 회사에서 지갑의 크기를 정하려고 합니다. 다양한 모양과 크기의 명함들을 모두 수납할 수 있으면서, 작아서 들고 다니기 편한 지갑을 만들어야 합니다. 이러한 요건을 만족하는 지갑을 만들기 위해 디자인팀은 모든 명함의 가로 길이와 세로 길이를 조사했습니다.")]),t._v(" "),s("p",[t._v("아래 표는 4가지 명함의 가로 길이와 세로 길이를 나타냅니다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("명함번호")]),t._v(" "),s("th",[t._v("가로길이")]),t._v(" "),s("th",[t._v("세로길이")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("60")]),t._v(" "),s("td",[t._v("50")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("30")]),t._v(" "),s("td",[t._v("70")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("60")]),t._v(" "),s("td",[t._v("30")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("80")]),t._v(" "),s("td",[t._v("40")])])])]),t._v(" "),s("br"),t._v("\n가장 긴 가로 길이와 세로 길이가 각각 80, 70이기 때문에 80(가로) x 70(세로) 크기의 지갑을 만들면 모든 명함들을 수납할 수 있습니다. 하지만 2번 명함을 가로로 눕혀 수납한다면 80(가로) x 50(세로) 크기의 지갑으로 모든 명함들을 수납할 수 있습니다. 이때의 지갑 크기는 4000(=80 x 50)입니다.\n"),s("p",[t._v("모든 명함의 가로 길이와 세로 길이를 나타내는 2차원 배열 sizes가 매개변수로 주어집니다. 모든 명함을 수납할 수 있는 가장 작은 지갑을 만들 때, 지갑의 크기를 return 하도록 solution 함수를 완성해주세요.")]),t._v(" "),s("br"),t._v(" "),s("br"),t._v("\n####  제한사항"),s("br"),t._v("\nsizes의 길이는 1 이상 10,000 이하입니다.\nsizes의 원소는 [w, h] 형식입니다.\nw는 명함의 가로 길이를 나타냅니다.\nh는 명함의 세로 길이를 나타냅니다.\nw와 h는 1 이상 1,000 이하인 자연수입니다.\n"),s("h4",{attrs:{id:"입출력-예"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#입출력-예"}},[t._v("#")]),t._v(" 입출력 예")]),t._v(" "),s("p",[t._v("입출력 예")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("sizes")]),t._v(" "),s("th",[t._v("result")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("[[[60, 50], [30, 70], [60, 30], [80, 40]]]")]),t._v(" "),s("td",[t._v("4000")])]),t._v(" "),s("tr",[s("td",[t._v("[[[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]]]")]),t._v(" "),s("td",[t._v("120")])]),t._v(" "),s("tr",[s("td",[t._v("[[[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]]]")]),t._v(" "),s("td",[t._v("133")])])])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"내-풀이"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#내-풀이"}},[t._v("#")]),t._v(" 내 풀이")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("solution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("sizes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" maxWidth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" maxHeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" sizes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        maxWidth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxWidth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        maxHeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxHeight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" maxWidth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" maxHeight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"풀이"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#풀이"}},[t._v("#")]),t._v(" [풀이]")]),t._v(" "),s("ol",[s("li",[t._v("sizes를 반복문으로 돌린다.")]),t._v(" "),s("li",[t._v("Math.max를 해서 가로,세로 중 큰 값을 width에 넣어준다")]),t._v(" "),s("li",[t._v("max를 해서 나온 값과 maxWidth에 있는 값 중에서 더 큰 값을 maxWidth에 넣어준다.")]),t._v(" "),s("li",[t._v("Math.min에서 작은 값을 height에 넣어준다.")]),t._v(" "),s("li",[t._v("max를 해서 나온 값과 maxHeight에 있는 값 중에서 더 큰 값을 maxHeight에 넣어준다.")]),t._v(" "),s("li",[t._v("두 값을 곱해서 리턴해준다")])]),t._v(" "),s("br"),t._v(" "),s("br"),t._v("\n#### 리뷰\n```\n처음 풀어보는 완전 탐색 문제였다.\n보자마자 문제를 어떻게 풀어야 할지 몰라서 엄청 헤맸다.\n해설을 계속 보던 중 결론은 이 문제는 가로,세로는 중요하지 않다는 것이다.\n명함을 세로로 넣든 가로로 넣든 들어가기만 하면 된다는 것이다.\n명함의 길고 짧은 길이를 알아내고, 명함의 가로세로 최소 길이만 파악하면 된다.\n"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code")])])])}),[],!1,null,null,null);s.default=r.exports}}]);